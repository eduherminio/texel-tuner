#include <array>
using u64 = uint64_t;

constexpr int32_t Pack(const int16_t mg, const int16_t eg) {
    return ((int32_t) eg << 16) + (int32_t) mg;
}

constexpr int16_t UnpackMG(const int32_t packed) {
    return (int16_t) packed;
}

constexpr int16_t UnpackEG(const int32_t packed) {
    return (int16_t) ((packed + 0x8000) >> 16);
}

constexpr std::array<int, 12> PieceValue = {
    +103, +386, +357, +475, +1084, // 0,
    +149, +485, +434, +843, +1560, // 0,
};

constexpr std::array<int, 10> PackedPieceValue = {
    Pack(PieceValue[0], PieceValue[5]),
    Pack(PieceValue[1], PieceValue[6]),
    Pack(PieceValue[2], PieceValue[7]),
    Pack(PieceValue[3], PieceValue[8]),
    Pack(PieceValue[4], PieceValue[9])
};

std::array<int, 6> phaseValues = {0, 1, 1, 2, 4, 0};

constexpr static int EvalNormalizationCoefficient = 90;

constexpr static std::array<int, 64> MiddleGamePawnTable =
    {
        0,      0,      0,      0,      0,      0,      0,      0,
        -26,    -23,    -15,    -9,     -3,     29,     31,     -15,
        -27,    -25,    -5,     11,     18,     27,     24,     7,
        -27,    -15,    3,      18,     27,     30,     3,      -6,
        -26,    -11,    1,      19,     27,     27,     2,      -7,
        -24,    -19,    -3,     4,      14,     23,     17,     1,
        -27,    -21,    -20,    -14,    -5,     22,     20,     -22,
        0,      0,      0,      0,      0,      0,      0,      0,
    };

constexpr static std::array<int, 64> EndGamePawnTable =
    {
        0,      0,      0,      0,      0,      0,      0,      0,
        12,     12,     6,      -15,    6,      2,      -4,     -12,
        11,     13,     0,      -14,    -7,     -5,     -2,     -11,
        28,     20,     0,      -22,    -18,    -12,    8,      -1,
        25,     19,     -2,     -17,    -16,    -9,     6,      -3,
        12,     10,     -4,     -13,    -2,     -3,     -1,     -11,
        15,     12,     9,      -14,    16,     6,      -1,     -9,
        0,      0,      0,      0,      0,      0,      0,      0,
    };

constexpr static std::array<int, 64> MiddleGameKnightTable =
    {
        -153,   -23,    -52,    -32,    -12,    -21,    -9,     -98,
        -46,    -27,    -3,     15,     18,     25,     -14,    -17,
        -28,    1,      20,     57,     61,     42,     35,     -3,
        -11,    25,     43,     60,     60,     61,     46,     18,
        -8,     24,     45,     48,     57,     59,     47,     17,
        -26,    3,      20,     49,     60,     35,     28,     -4,
        -48,    -19,    0,      15,     17,     19,     -11,    -18,
        -168,   -24,    -49,    -21,    -9,     -12,    -17,    -91,
    };

constexpr static std::array<int, 64> EndGameKnightTable =
    {
        -72,    -61,    -13,    -13,    -10,    -28,    -55,    -93,
        -22,    -2,     15,     9,      10,     7,      -13,    -21,
        -14,    16,     38,     38,     37,     18,     10,     -15,
        7,      20,     52,     53,     56,     50,     25,     -6,
        4,      27,     51,     55,     58,     47,     31,     0,
        -18,    19,     27,     45,     35,     20,     7,      -11,
        -28,    2,      5,      13,     5,      0,      -15,    -25,
        -78,    -60,    -9,     -17,    -11,    -26,    -53,    -93,
    };

constexpr static std::array<int, 64> MiddleGameBishopTable =
    {
        -15,    16,     -2,     -15,    -10,    -16,    -23,    2,
        8,      3,      7,      -18,    1,      -1,     29,     -12,
        -6,     5,      -4,     3,      -8,     14,     5,      28,
        -7,     -7,     -6,     23,     19,     -18,    2,      -2,
        -16,    -2,     -15,    17,     6,      -13,    -6,     5,
        5,      5,      7,      -5,     6,      7,      8,      24,
        10,     15,     12,     -6,     -3,     4,      21,     -2,
        10,     20,     12,     -29,    -13,    -21,    1,      -12,
    };

constexpr static std::array<int, 64> EndGameBishopTable =
    {
        -14,    18,     -13,    3,      -3,     6,      1,      -31,
        -5,     -8,     -4,     5,      4,      -10,    -2,     -16,
        14,     16,     8,      3,      12,     4,      7,      10,
        13,     8,      7,      -2,     -6,     6,      4,      5,
        9,      10,     6,      4,      -10,    5,      4,      5,
        12,     4,      0,      1,      5,      -1,     4,      7,
        -15,    -11,    -17,    3,      1,      -3,     -2,     -11,
        -7,     -12,    -7,     7,      8,      9,      -2,     -22,
    };

constexpr static std::array<int, 64> MiddleGameRookTable =
    {
        -4,     -10,    -5,     2,      14,     3,      10,     0,
        -27,    -17,    -14,    -14,    -2,     3,      21,     0,
        -29,    -19,    -23,    -13,    4,      9,      55,     31,
        -26,    -21,    -18,    -12,    -7,     8,      44,     21,
        -20,    -17,    -12,    -5,     -10,    7,      33,     16,
        -24,    -16,    -19,    -5,     1,      19,     50,     30,
        -25,    -28,    -9,     -7,     -1,     1,      27,     4,
        -2,     -3,     1,      12,     23,     8,      17,     12,
    };

constexpr static std::array<int, 64> EndGameRookTable =
    {
        6,      3,      7,      -2,     -11,    4,      0,      -5,
        15,     20,     21,     11,     0,      -2,     -6,     2,
        11,     8,      12,     5,      -9,     -11,    -23,    -20,
        15,     10,     12,     6,      -2,     -2,     -16,    -15,
        14,     9,      12,     2,      -1,     -9,     -13,    -11,
        12,     13,     3,      -4,     -11,    -16,    -22,    -14,
        20,     23,     16,     5,      -3,     -2,     -8,     2,
        1,      -3,     2,      -8,     -18,    -4,     -9,     -15,
    };

constexpr static std::array<int, 64> MiddleGameQueenTable =
    {
        -15,    -10,    -5,     9,      3,      -32,    14,     1,
        0,      -10,    7,      -2,     2,      6,      22,     51,
        -8,     -5,     -10,    -9,     -14,    6,      35,     59,
        -12,    -20,    -19,    -9,     -11,    -5,     11,     25,
        -12,    -15,    -20,    -20,    -10,    -6,     9,      22,
        -5,     -3,     -16,    -13,    -8,     4,      20,     39,
        -15,    -21,    3,      9,      7,      3,      6,      37,
        -11,    -11,    5,      11,     6,      -39,    -12,    28,
    };

constexpr static std::array<int, 64> EndGameQueenTable =
    {
        -27,    -24,    -10,    -9,     -19,    -11,    -46,    6,
        -22,    -13,    -28,    0,      -2,     -17,    -48,    -5,
        -17,    -7,     4,      -1,     23,     23,     -8,     3,
        -11,    8,      5,      12,     28,     40,     49,     35,
        -2,     2,      14,     26,     26,     34,     27,     48,
        -20,    -14,    15,     13,     19,     22,     23,     18,
        -15,    -6,     -23,    -18,    -12,    -10,    -32,    6,
        -15,    -18,    -17,    -2,     -9,     21,     13,     -9,
    };

constexpr static std::array<int, 64> MiddleGameKingTable =
    {
        34,     55,     30,     -72,    12,     -58,    44,     57,
        -3,     -12,    -33,    -74,    -88,    -58,    -7,     23,
        -83,    -71,    -116,   -119,   -133,   -137,   -88,    -100,
        -120,   -119,   -138,   -181,   -172,   -160,   -157,   -190,
        -85,    -87,    -128,   -159,   -174,   -144,   -161,   -182,
        -77,    -42,    -108,   -119,   -103,   -116,   -78,    -92,
        83,     -2,     -34,    -64,    -69,    -46,    9,      32,
        49,     82,     43,     -55,    25,     -47,    58,     70,
    };

constexpr static std::array<int, 64> EndGameKingTable =
    {
        -85,    -49,    -22,    4,      -36,    -3,     -41,    -96,
        -21,    16,     30,     43,     51,     36,     14,     -24,
        7,      44,     65,     77,     81,     71,     47,     25,
        17,     60,     85,     102,    98,     90,     75,     47,
        5,      50,     82,     98,     103,    88,     78,     46,
        6,      40,     64,     77,     74,     66,     47,     20,
        -45,    11,     31,     41,     44,     33,     9,      -27,
        -97,    -61,    -29,    -3,     -31,    -7,     -45,    -101,
    };

constexpr static std::array<std::array<int, 64>, 6> MiddleGamePositionalWhiteTables =
    {
        MiddleGamePawnTable,
        MiddleGameKnightTable,
        MiddleGameBishopTable,
        MiddleGameRookTable,
        MiddleGameQueenTable,
        MiddleGameKingTable};

constexpr static std::array<std::array<int, 64>, 6> EndGamePositionalWhiteTables{
    EndGamePawnTable,
    EndGameKnightTable,
    EndGameBishopTable,
    EndGameRookTable,
    EndGameQueenTable,
    EndGameKingTable};

int MiddleGamePositionalTables(int piece, int square)
{
    int coefficient = 1;
    if (piece >= 6)
    {
        piece -= 6;
        square ^= 56;
        coefficient = -1;
    }

    return MiddleGamePositionalWhiteTables[piece][square] * coefficient;
}

int EndGamePositionalTables(int piece, int square)
{
    int coefficient = 1;
    if (piece >= 6)
    {
        piece -= 6;
        square ^= 56;
        coefficient = -1;
    }

    return EndGamePositionalWhiteTables[piece][square] * coefficient;
}

int PackedPositionalTables(int piece, int square)
{
    int coefficient = 1;
    if (piece >= 6)
    {
        piece -= 6;
        square ^= 56;
        coefficient = -1;
    }

    return Pack(
        MiddleGamePositionalWhiteTables[piece][square] * coefficient,
        EndGamePositionalWhiteTables[piece][square] * coefficient);
}

constexpr static std::array<u64, 64> FileMasks = {
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL};

constexpr static std::array<u64, 64> IsolatedPawnMasks = {
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
};

constexpr static std::array<u64, 64> WhitePassedPawnMasks = {
    0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
    3UL, 7UL, 14UL, 28UL, 56UL, 112UL, 224UL, 192UL,
    771UL, 1799UL, 3598UL, 7196UL, 14392UL, 28784UL, 57568UL, 49344UL,
    197379UL, 460551UL, 921102UL, 1842204UL, 3684408UL, 7368816UL, 14737632UL, 12632256UL,
    50529027UL, 117901063UL, 235802126UL, 471604252UL, 943208504UL, 1886417008UL, 3772834016UL, 3233857728UL,
    12935430915UL, 30182672135UL, 60365344270UL, 120730688540UL, 241461377080UL, 482922754160UL, 965845508320UL, 827867578560UL,
    3311470314243UL, 7726764066567UL, 15453528133134UL, 30907056266268UL, 61814112532536UL, 123628225065072UL, 247256450130144UL, 211934100111552UL,
    847736400446211UL, 1978051601041159UL, 3956103202082318UL, 7912206404164636UL, 15824412808329272UL, 31648825616658544UL, 63297651233317088UL, 54255129628557504UL};

constexpr static std::array<u64, 64> BlackPassedPawnMasks = {
    217020518514230016UL, 506381209866536704UL, 1012762419733073408UL, 2025524839466146816UL, 4051049678932293632UL, 8102099357864587264UL, 16204198715729174528UL, 13889313184910721024UL,
    217020518514229248UL, 506381209866534912UL, 1012762419733069824UL, 2025524839466139648UL, 4051049678932279296UL, 8102099357864558592UL, 16204198715729117184UL, 13889313184910671872UL,
    217020518514032640UL, 506381209866076160UL, 1012762419732152320UL, 2025524839464304640UL, 4051049678928609280UL, 8102099357857218560UL, 16204198715714437120UL, 13889313184898088960UL,
    217020518463700992UL, 506381209748635648UL, 1012762419497271296UL, 2025524838994542592UL, 4051049677989085184UL, 8102099355978170368UL, 16204198711956340736UL, 13889313181676863488UL,
    217020505578799104UL, 506381179683864576UL, 1012762359367729152UL, 2025524718735458304UL, 4051049437470916608UL, 8102098874941833216UL, 16204197749883666432UL, 13889312357043142656UL,
    217017207043915776UL, 506373483102470144UL, 1012746966204940288UL, 2025493932409880576UL, 4050987864819761152UL, 8101975729639522304UL, 16203951459279044608UL, 13889101250810609664UL,
    216172782113783808UL, 504403158265495552UL, 1008806316530991104UL, 2017612633061982208UL, 4035225266123964416UL, 8070450532247928832UL, 16140901064495857664UL, 13835058055282163712UL,
    0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL};

constexpr static std::array<int, 64> Rank =
    {
        7UL, 7UL, 7UL, 7UL, 7UL, 7UL, 7UL, 7UL,
        6UL, 6UL, 6UL, 6UL, 6UL, 6UL, 6UL, 6UL,
        5UL, 5UL, 5UL, 5UL, 5UL, 5UL, 5UL, 5UL,
        4UL, 4UL, 4UL, 4UL, 4UL, 4UL, 4UL, 4UL,
        3UL, 3UL, 3UL, 3UL, 3UL, 3UL, 3UL, 3UL,
        2UL, 2UL, 2UL, 2UL, 2UL, 2UL, 2UL, 2UL,
        1UL, 1UL, 1UL, 1UL, 1UL, 1UL, 1UL, 1UL,
        0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL};

