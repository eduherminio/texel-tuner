#include <array>
using u64 = uint64_t;

constexpr int32_t Pack(const int16_t mg, const int16_t eg) {
    return ((int32_t) eg << 16) + (int32_t) mg;
}

constexpr int16_t UnpackMG(const int32_t packed) {
    return (int16_t) packed;
}

constexpr int16_t UnpackEG(const int32_t packed) {
    return (int16_t) ((packed + 0x8000) >> 16);
}

constexpr int PieceOffset(bool isWhite)
{
    return 6 - (6 * isWhite);
}

constexpr std::array<int, 12> PieceValue = {
        +105, +392, +363, +488, +1116, // 0,
        +135, +443, +399, +774, +1424, // 0
};

constexpr std::array<int, 10> PackedPieceValue = {
    Pack(PieceValue[0], PieceValue[5]),
    Pack(PieceValue[1], PieceValue[6]),
    Pack(PieceValue[2], PieceValue[7]),
    Pack(PieceValue[3], PieceValue[8]),
    Pack(PieceValue[4], PieceValue[9])
};

std::array<int, 6> phaseValues = {0, 1, 1, 2, 4, 0};

constexpr static int EvalNormalizationCoefficient = 142;

constexpr static std::array<int, 64> MiddleGamePawnTable =
    {
        0,      0,      0,      0,      0,      0,      0,      0,
        -26,    -22,    -15,    -10,    -2,     29,     31,     -15,
        -26,    -24,    -6,     9,      18,     28,     26,     7,
        -25,    -15,    3,      17,     25,     31,     4,      -5,
        -25,    -11,    1,      19,     27,     28,     3,      -6,
        -24,    -17,    -4,     3,      14,     25,     19,     1,
        -26,    -20,    -19,    -14,    -5,     23,     21,     -22,
        0,      0,      0,      0,      0,      0,      0,      0,
    };

constexpr static std::array<int, 64> EndGamePawnTable =
    {
        0,      0,      0,      0,      0,      0,      0,      0,
        11,     11,     6,      -12,    6,      2,      -5,     -10,
        9,      10,     0,      -13,    -7,     -6,     -5,     -11,
        24,     17,     -1,     -20,    -16,    -12,    6,      -2,
        22,     17,     -2,     -16,    -14,    -9,     4,      -4,
        10,     8,      -3,     -11,    -3,     -4,     -4,     -11,
        13,     11,     9,      -12,    15,     5,      -2,     -6,
        0,      0,      0,      0,      0,      0,      0,      0,
    };

constexpr static std::array<int, 64> MiddleGameKnightTable =
    {
        -145,   -22,    -50,    -31,    -12,    -20,    -10,    -98,
        -45,    -28,    -3,     16,     17,     24,     -14,    -17,
        -28,    2,      20,     57,     60,     40,     34,     -4,
        -10,    25,     44,     59,     59,     59,     45,     18,
        -7,     25,     46,     47,     57,     58,     45,     17,
        -26,    4,      20,     49,     58,     34,     28,     -5,
        -46,    -19,    0,      15,     17,     19,     -13,    -18,
        -163,   -25,    -48,    -20,    -9,     -11,    -18,    -88,
    };

constexpr static std::array<int, 64> EndGameKnightTable =
    {
        -67,    -59,    -12,    -11,    -10,    -27,    -53,    -87,
        -18,    1,      13,     8,      8,      5,      -10,    -20,
        -14,    15,     35,     35,     32,     17,     9,      -14,
        7,      19,     47,     48,     52,     46,     24,     -7,
        4,      24,     46,     51,     52,     42,     28,     0,
        -16,    18,     26,     40,     32,     18,     5,      -10,
        -25,    4,      5,      11,     4,      0,      -11,    -24,
        -71,    -57,    -7,     -14,    -11,    -26,    -50,    -85,
    };

constexpr static std::array<int, 64> MiddleGameBishopTable =
    {
        -18,    14,     -3,     -15,    -12,    -16,    -22,    0,
        7,      2,      7,      -18,    2,      -1,     27,     -12,
        -6,     5,      -4,     3,      -8,     13,     4,      27,
        -8,     -6,     -5,     23,     20,     -17,    2,      -2,
        -15,    -1,     -13,    18,     6,      -13,    -6,     5,
        5,      5,      7,      -4,     6,      6,      7,      22,
        9,      13,     11,     -6,     -3,     3,      19,     -3,
        7,      18,     11,     -30,    -14,    -21,    1,      -15,
    };

constexpr static std::array<int, 64> EndGameBishopTable =
    {
        -11,    13,     -14,    3,      -2,     4,      -2,     -27,
        -3,     -7,     -3,     4,      2,      -9,     -3,     -15,
        12,     13,     7,      2,      11,     3,      6,      9,
        12,     7,      6,      -3,     -6,     6,      5,      6,
        8,      10,     6,      0,      -8,     6,      7,      7,
        10,     4,      0,      0,      5,      -1,     4,      6,
        -13,    -10,    -14,    2,      1,      -3,     -3,     -10,
        -7,     -14,    -9,     7,      7,      6,      -4,     -13,
    };

constexpr static std::array<int, 64> MiddleGameRookTable =
    {
        -4,     -10,    -4,     2,      14,     4,      7,      -2,
        -26,    -17,    -13,    -12,    0,      3,      17,     -3,
        -29,    -20,    -22,    -12,    3,      10,     50,     27,
        -24,    -21,    -17,    -8,     -4,     9,      38,     19,
        -18,    -15,    -13,    -5,     -6,     8,      29,     14,
        -22,    -16,    -18,    -4,     2,      19,     48,     27,
        -24,    -26,    -9,     -6,     2,      2,      23,     2,
        -2,     -4,     0,      12,     22,     8,      15,     9,
    };

constexpr static std::array<int, 64> EndGameRookTable =
    {
        4,      2,      6,      -3,     -11,    3,      0,      -4,
        16,     19,     18,     8,      -1,     -2,     -4,     3,
        14,     11,     12,     5,      -7,     -9,     -20,    -16,
        15,     11,     13,     6,      0,      -1,     -13,    -13,
        15,     11,     13,     4,      1,      -6,     -10,    -9,
        13,     14,     5,      -3,     -10,    -13,    -20,    -11,
        19,     22,     14,     4,      -4,     -2,     -4,     2,
        0,      -3,     1,      -9,     -18,    -5,     -8,     -12,
    };

constexpr static std::array<int, 64> MiddleGameQueenTable =
    {
        -12,    -10,    -5,     9,      3,      -30,    9,      2,
        -2,     -10,    7,      -3,     2,      6,      22,     49,
        -9,     -6,     -9,     -10,    -12,    7,      34,     55,
        -12,    -19,    -18,    -9,     -9,     -5,     11,     24,
        -12,    -16,    -19,    -18,    -8,     -5,     9,      22,
        -6,     -4,     -15,    -12,    -5,     4,      20,     37,
        -16,    -20,    3,      10,     7,      3,      6,      36,
        -10,    -10,    4,      11,     6,      -36,    -13,    25,
    };

constexpr static std::array<int, 64> EndGameQueenTable =
    {
        -24,    -20,    -11,    -11,    -16,    -10,    -34,    9,
        -16,    -9,     -25,    0,      -2,     -16,    -45,    -7,
        -15,    -4,     6,      2,      23,     20,     -8,     4,
        -9,     9,      9,      14,     27,     38,     44,     31,
        -2,     5,      16,     25,     22,     34,     25,     40,
        -15,    -11,    14,     12,     14,     20,     19,     15,
        -10,    -3,     -21,    -18,    -12,    -11,    -31,    3,
        -15,    -16,    -17,    -6,     -9,     16,     14,     -3,
    };

constexpr static std::array<int, 64> MiddleGameKingTable =
    {
        25,     50,     26,     -74,    9,      -61,    39,     48,
        -11,    -16,    -34,    -72,    -84,    -58,    -10,    19,
        -82,    -67,    -105,   -107,   -116,   -124,   -83,    -96,
        -105,   -95,    -115,   -150,   -145,   -138,   -137,   -162,
        -71,    -69,    -103,   -130,   -146,   -123,   -141,   -158,
        -79,    -43,    -96,    -104,   -93,    -104,   -75,    -87,
        72,     -9,     -37,    -63,    -68,    -47,    4,      26,
        38,     75,     38,     -59,    20,     -51,    52,     62,
    };

constexpr static std::array<int, 64> EndGameKingTable =
    {
        -72,    -46,    -20,    5,      -33,    -2,     -38,    -89,
        -13,    18,     27,     39,     46,     33,     13,     -23,
        10,     42,     59,     68,     72,     64,     44,     22,
        15,     53,     75,     90,     88,     80,     68,     39,
        5,      45,     72,     86,     91,     78,     70,     39,
        11,     39,     57,     68,     66,     59,     43,     17,
        -38,    13,     28,     37,     39,     29,     8,      -26,
        -82,    -56,    -26,    -2,     -29,    -6,     -42,    -94,
    };

constexpr static std::array<std::array<int, 64>, 6> MiddleGamePositionalWhiteTables =
    {
        MiddleGamePawnTable,
        MiddleGameKnightTable,
        MiddleGameBishopTable,
        MiddleGameRookTable,
        MiddleGameQueenTable,
        MiddleGameKingTable};

constexpr static std::array<std::array<int, 64>, 6> EndGamePositionalWhiteTables{
    EndGamePawnTable,
    EndGameKnightTable,
    EndGameBishopTable,
    EndGameRookTable,
    EndGameQueenTable,
    EndGameKingTable};

int MiddleGamePositionalTables(int piece, int square)
{
    int coefficient = 1;
    if (piece >= 6)
    {
        piece -= 6;
        square ^= 56;
        coefficient = -1;
    }

    return MiddleGamePositionalWhiteTables[piece][square] * coefficient;
}

int EndGamePositionalTables(int piece, int square)
{
    int coefficient = 1;
    if (piece >= 6)
    {
        piece -= 6;
        square ^= 56;
        coefficient = -1;
    }

    return EndGamePositionalWhiteTables[piece][square] * coefficient;
}

int PackedPositionalTables(int piece, int square)
{
    int coefficient = 1;
    if (piece >= 6)
    {
        piece -= 6;
        square ^= 56;
        coefficient = -1;
    }

    return Pack(
        MiddleGamePositionalWhiteTables[piece][square] * coefficient,
        EndGamePositionalWhiteTables[piece][square] * coefficient);
}

constexpr static std::array<u64, 64> FileMasks = {
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL};

constexpr static std::array<u64, 64> IsolatedPawnMasks = {
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
};

constexpr static std::array<u64, 64> WhitePassedPawnMasks = {
    0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
    3UL, 7UL, 14UL, 28UL, 56UL, 112UL, 224UL, 192UL,
    771UL, 1799UL, 3598UL, 7196UL, 14392UL, 28784UL, 57568UL, 49344UL,
    197379UL, 460551UL, 921102UL, 1842204UL, 3684408UL, 7368816UL, 14737632UL, 12632256UL,
    50529027UL, 117901063UL, 235802126UL, 471604252UL, 943208504UL, 1886417008UL, 3772834016UL, 3233857728UL,
    12935430915UL, 30182672135UL, 60365344270UL, 120730688540UL, 241461377080UL, 482922754160UL, 965845508320UL, 827867578560UL,
    3311470314243UL, 7726764066567UL, 15453528133134UL, 30907056266268UL, 61814112532536UL, 123628225065072UL, 247256450130144UL, 211934100111552UL,
    847736400446211UL, 1978051601041159UL, 3956103202082318UL, 7912206404164636UL, 15824412808329272UL, 31648825616658544UL, 63297651233317088UL, 54255129628557504UL};

constexpr static std::array<u64, 64> BlackPassedPawnMasks = {
    217020518514230016UL, 506381209866536704UL, 1012762419733073408UL, 2025524839466146816UL, 4051049678932293632UL, 8102099357864587264UL, 16204198715729174528UL, 13889313184910721024UL,
    217020518514229248UL, 506381209866534912UL, 1012762419733069824UL, 2025524839466139648UL, 4051049678932279296UL, 8102099357864558592UL, 16204198715729117184UL, 13889313184910671872UL,
    217020518514032640UL, 506381209866076160UL, 1012762419732152320UL, 2025524839464304640UL, 4051049678928609280UL, 8102099357857218560UL, 16204198715714437120UL, 13889313184898088960UL,
    217020518463700992UL, 506381209748635648UL, 1012762419497271296UL, 2025524838994542592UL, 4051049677989085184UL, 8102099355978170368UL, 16204198711956340736UL, 13889313181676863488UL,
    217020505578799104UL, 506381179683864576UL, 1012762359367729152UL, 2025524718735458304UL, 4051049437470916608UL, 8102098874941833216UL, 16204197749883666432UL, 13889312357043142656UL,
    217017207043915776UL, 506373483102470144UL, 1012746966204940288UL, 2025493932409880576UL, 4050987864819761152UL, 8101975729639522304UL, 16203951459279044608UL, 13889101250810609664UL,
    216172782113783808UL, 504403158265495552UL, 1008806316530991104UL, 2017612633061982208UL, 4035225266123964416UL, 8070450532247928832UL, 16140901064495857664UL, 13835058055282163712UL,
    0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL};

constexpr static std::array<int, 64> Rank =
    {
        7UL, 7UL, 7UL, 7UL, 7UL, 7UL, 7UL, 7UL,
        6UL, 6UL, 6UL, 6UL, 6UL, 6UL, 6UL, 6UL,
        5UL, 5UL, 5UL, 5UL, 5UL, 5UL, 5UL, 5UL,
        4UL, 4UL, 4UL, 4UL, 4UL, 4UL, 4UL, 4UL,
        3UL, 3UL, 3UL, 3UL, 3UL, 3UL, 3UL, 3UL,
        2UL, 2UL, 2UL, 2UL, 2UL, 2UL, 2UL, 2UL,
        1UL, 1UL, 1UL, 1UL, 1UL, 1UL, 1UL, 1UL,
        0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL};

