#include <array>
using u64 = uint64_t;

constexpr static std::array<int, 64> MiddleGamePawnTable =
    {
            0, 0, 0, 0, 0, 0, 0, 0,
            0, 7, 15, 14, 23, 42, 46, 9,
            2, 5, 21, 33, 39, 44, 41, 28,
            5, 12, 26, 39, 45, 48, 25, 22,
            6, 15, 26, 42, 46, 45, 24, 21,
            3, 10, 22, 29, 35, 39, 36, 24,
            0, 10, 11, 15, 26, 36, 37, 3,
            0, 0, 0, 0, 0, 0, 0, 0,};

constexpr static std::array<int, 64> EndGamePawnTable =
    {
            0, 0, 0, 0, 0, 0, 0, 0,
            -46, -48, -53, -67, -53, -56, -60, -63,
            -48, -47, -57, -67, -62, -62, -57, -63,
            -36, -42, -55, -72, -70, -66, -50, -57,
            -39, -42, -58, -69, -69, -63, -52, -58,
            -47, -49, -60, -65, -59, -59, -58, -64,
            -44, -48, -50, -69, -50, -52, -57, -60,
            0, 0, 0, 0, 0, 0, 0, 0,};

constexpr static std::array<int, 64> MiddleGameKnightTable =
    {
            -106, -22, -36, -25, -11, -13, -14, -65,
            -30, -14, 4, 18, 20, 22, -3, -8,
            -19, 8, 24, 48, 53, 38, 34, 4,
            0, 28, 39, 53, 53, 53, 40, 21,
            3, 23, 41, 43, 51, 52, 40, 18,
            -17, 10, 22, 42, 51, 32, 28, 5,
            -27, -3, 10, 17, 17, 17, -1, -9,
            -118, -25, -35, -16, -9, -7, -20, -64,};

constexpr static std::array<int, 64> EndGameKnightTable =
    {
            -46, -30, 0, 2, 4, -11, -24, -59,
            -4, 8, 23, 17, 17, 16, 0, -4,
            5, 22, 36, 38, 38, 23, 15, -2,
            16, 26, 48, 48, 50, 45, 27, 7,
            17, 31, 45, 49, 50, 40, 31, 10,
            1, 25, 29, 44, 35, 24, 15, 1,
            -13, 10, 14, 20, 15, 14, -2, -5,
            -50, -30, 3, 1, 4, -6, -23, -53,};

constexpr static std::array<int, 64> MiddleGameBishopTable =
    {
            -19, 5, -12, -24, -17, -22, -19, 0,
            -1, -2, 0, -18, -3, -7, 17, -10,
            -10, 0, -7, -4, -11, 5, 2, 18,
            -7, -12, -11, 8, 7, -18, -3, -4,
            -15, -5, -16, 7, -3, -13, -9, 1,
            -2, -1, 0, -10, -2, -1, 3, 15,
            1, 7, 4, -9, -9, -6, 11, -4,
            5, 5, -2, -33, -19, -23, -10, -14,};

constexpr static std::array<int, 64> EndGameBishopTable =
    {
            -3, 19, -11, 9, 1, 8, 1, -24,
            1, 1, 1, 9, 6, -3, 3, -7,
            15, 17, 11, 9, 15, 10, 7, 9,
            14, 13, 12, 5, 4, 12, 8, 6,
            12, 12, 10, 8, -2, 7, 8, 6,
            15, 8, 5, 6, 10, 5, 6, 9,
            -7, -4, -9, 6, 6, 5, 5, -5,
            -3, -5, -8, 9, 11, 9, 4, -11,};

constexpr static std::array<int, 64> MiddleGameRookTable =
    {
            7, 1, 1, 5, 17, 8, 14, 7,
            -10, 3, 2, 3, 11, 12, 26, 9,
            -10, 1, 0, 5, 17, 23, 54, 34,
            -8, -1, 3, 6, 12, 17, 43, 32,
            -2, 2, 7, 14, 12, 21, 36, 31,
            -6, 2, 5, 13, 18, 29, 53, 38,
            -9, -7, 6, 6, 11, 12, 30, 11,
            9, 6, 7, 14, 23, 11, 20, 18,};

constexpr static std::array<int, 64> EndGameRookTable =
    {
            14, 16, 22, 13, 6, 14, 15, 9,
            20, 25, 25, 17, 9, 12, 7, 11,
            16, 14, 16, 12, 3, 1, -8, -9,
            18, 14, 18, 15, 6, 8, -2, -7,
            17, 15, 19, 10, 7, 2, -2, -4,
            17, 19, 11, 5, 1, -1, -8, -4,
            24, 26, 21, 14, 6, 10, 6, 14,
            10, 10, 17, 9, 1, 9, 7, 0,};

constexpr static std::array<int, 64> MiddleGameQueenTable =
    {
            -14, -16, -16, -2, -10, -27, 1, -2,
            3, -6, 6, -1, 3, 4, 15, 38,
            -2, -2, -4, -4, -6, 7, 28, 42,
            -5, -13, -9, -4, -6, -1, 13, 21,
            -6, -8, -11, -11, -5, 0, 7, 17,
            -2, -1, -8, -6, -2, 3, 17, 28,
            -7, -15, 3, 7, 5, 0, 9, 29,
            -10, -21, -11, 1, -7, -36, -15, 11,};

constexpr static std::array<int, 64> EndGameQueenTable =
    {
            -12, -3, 6, -2, 2, 3, -22, 7,
            -13, -8, -13, 4, 5, -7, -26, 2,
            -7, 2, 5, 5, 20, 20, -4, 12,
            -4, 11, 1, 13, 23, 30, 35, 28,
            6, 6, 12, 22, 20, 24, 25, 39,
            -6, -2, 14, 12, 16, 23, 18, 21,
            -5, 1, -9, -8, 1, 3, -21, 9,
            -1, 2, 5, -2, 9, 27, 19, 0,};

constexpr static std::array<int, 64> MiddleGameKingTable =
    {
            19, 27, 4, -74, -15, -64, 14, 32,
            -17, -23, -40, -70, -79, -59, -21, 2,
            -80, -74, -108, -110, -115, -123, -87, -91,
            -117, -116, -136, -166, -160, -149, -150, -173,
            -81, -97, -126, -154, -159, -129, -151, -157,
            -72, -45, -101, -110, -95, -103, -77, -81,
            55, -17, -38, -62, -63, -49, -8, 10,
            27, 45, 10, -65, -4, -54, 27, 43,};

constexpr static std::array<int, 64> EndGameKingTable =
    {
            -58, -32, -11, 10, -20, 5, -22, -63,
            -8, 19, 29, 40, 46, 34, 17, -8,
            10, 40, 56, 65, 67, 61, 43, 25,
            19, 52, 72, 87, 83, 75, 64, 44,
            9, 45, 69, 83, 86, 73, 66, 41,
            8, 35, 55, 65, 62, 56, 43, 22,
            -29, 13, 28, 37, 39, 31, 13, -13,
            -67, -39, -14, 5, -17, 2, -27, -67,};

constexpr static std::array<std::array<int, 64>, 6> MiddleGamePositionalWhiteTables =
    {
        MiddleGamePawnTable,
        MiddleGameKnightTable,
        MiddleGameBishopTable,
        MiddleGameRookTable,
        MiddleGameQueenTable,
        MiddleGameKingTable};

constexpr static std::array<std::array<int, 64>, 6> EndGamePositionalWhiteTables{
    EndGamePawnTable,
    EndGameKnightTable,
    EndGameBishopTable,
    EndGameRookTable,
    EndGameQueenTable,
    EndGameKingTable};

int MiddleGamePositionalTables(int piece, int square)
{
    int coefficient = 1;
    if (piece >= 6)
    {
        piece -= 6;
        square ^= 56;
        coefficient = -1;
    }

    return MiddleGamePositionalWhiteTables[piece][square] * coefficient;
}

int EndGamePositionalTables(int piece, int square)
{
    int coefficient = 1;
    if (piece >= 6)
    {
        piece -= 6;
        square ^= 56;
        coefficient = -1;
    }

    return EndGamePositionalWhiteTables[piece][square] * coefficient;
}

constexpr static std::array<u64, 64> FileMasks = {
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL,
    72340172838076673UL, 144680345676153346UL, 289360691352306692UL, 578721382704613384UL, 1157442765409226768UL, 2314885530818453536UL, 4629771061636907072UL, 9259542123273814144UL};

constexpr static std::array<u64, 64> IsolatedPawnMasks = {
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
    144680345676153346UL,
    361700864190383365UL,
    723401728380766730UL,
    1446803456761533460UL,
    2893606913523066920UL,
    5787213827046133840UL,
    11574427654092267680UL,
    4629771061636907072UL,
};

constexpr static std::array<u64, 64> WhitePassedPawnMasks = {
    0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
    3UL, 7UL, 14UL, 28UL, 56UL, 112UL, 224UL, 192UL,
    771UL, 1799UL, 3598UL, 7196UL, 14392UL, 28784UL, 57568UL, 49344UL,
    197379UL, 460551UL, 921102UL, 1842204UL, 3684408UL, 7368816UL, 14737632UL, 12632256UL,
    50529027UL, 117901063UL, 235802126UL, 471604252UL, 943208504UL, 1886417008UL, 3772834016UL, 3233857728UL,
    12935430915UL, 30182672135UL, 60365344270UL, 120730688540UL, 241461377080UL, 482922754160UL, 965845508320UL, 827867578560UL,
    3311470314243UL, 7726764066567UL, 15453528133134UL, 30907056266268UL, 61814112532536UL, 123628225065072UL, 247256450130144UL, 211934100111552UL,
    847736400446211UL, 1978051601041159UL, 3956103202082318UL, 7912206404164636UL, 15824412808329272UL, 31648825616658544UL, 63297651233317088UL, 54255129628557504UL};

constexpr static std::array<u64, 64> BlackPassedPawnMasks = {
    217020518514230016UL, 506381209866536704UL, 1012762419733073408UL, 2025524839466146816UL, 4051049678932293632UL, 8102099357864587264UL, 16204198715729174528UL, 13889313184910721024UL,
    217020518514229248UL, 506381209866534912UL, 1012762419733069824UL, 2025524839466139648UL, 4051049678932279296UL, 8102099357864558592UL, 16204198715729117184UL, 13889313184910671872UL,
    217020518514032640UL, 506381209866076160UL, 1012762419732152320UL, 2025524839464304640UL, 4051049678928609280UL, 8102099357857218560UL, 16204198715714437120UL, 13889313184898088960UL,
    217020518463700992UL, 506381209748635648UL, 1012762419497271296UL, 2025524838994542592UL, 4051049677989085184UL, 8102099355978170368UL, 16204198711956340736UL, 13889313181676863488UL,
    217020505578799104UL, 506381179683864576UL, 1012762359367729152UL, 2025524718735458304UL, 4051049437470916608UL, 8102098874941833216UL, 16204197749883666432UL, 13889312357043142656UL,
    217017207043915776UL, 506373483102470144UL, 1012746966204940288UL, 2025493932409880576UL, 4050987864819761152UL, 8101975729639522304UL, 16203951459279044608UL, 13889101250810609664UL,
    216172782113783808UL, 504403158265495552UL, 1008806316530991104UL, 2017612633061982208UL, 4035225266123964416UL, 8070450532247928832UL, 16140901064495857664UL, 13835058055282163712UL,
    0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL};

constexpr static std::array<int, 64> Rank =
    {
        7UL, 7UL, 7UL, 7UL, 7UL, 7UL, 7UL, 7UL,
        6UL, 6UL, 6UL, 6UL, 6UL, 6UL, 6UL, 6UL,
        5UL, 5UL, 5UL, 5UL, 5UL, 5UL, 5UL, 5UL,
        4UL, 4UL, 4UL, 4UL, 4UL, 4UL, 4UL, 4UL,
        3UL, 3UL, 3UL, 3UL, 3UL, 3UL, 3UL, 3UL,
        2UL, 2UL, 2UL, 2UL, 2UL, 2UL, 2UL, 2UL,
        1UL, 1UL, 1UL, 1UL, 1UL, 1UL, 1UL, 1UL,
        0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL};

constexpr std::array<int, 12> PieceValue = {
    49, 270, 255, 347, 790, // 0,
    165, 346, 320, 644, 1119,  // 0
};

// constexpr std::array<int, 12> simpleEvalPieceValue = {
//     100, 300, 300, 500, 900, // 0,
//     100, 300, 300, 500, 900, // 0,
// };

std::array<int, 6> phaseValues = {0, 1, 1, 2, 4, 0};

constexpr static int EvalNormalizationCoefficient = 81;
